

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Nov 21 20:50:30 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	text9,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F628A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001F                     	;# 
    77     0081                     	;# 
    78     0085                     	;# 
    79     0086                     	;# 
    80     008C                     	;# 
    81     008E                     	;# 
    82     0092                     	;# 
    83     0098                     	;# 
    84     0099                     	;# 
    85     009A                     	;# 
    86     009B                     	;# 
    87     009C                     	;# 
    88     009D                     	;# 
    89     009F                     	;# 
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     008C                     	;# 
   118     008E                     	;# 
   119     0092                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009F                     	;# 
   127     0000                     	;# 
   128     0001                     	;# 
   129     0002                     	;# 
   130     0003                     	;# 
   131     0004                     	;# 
   132     0005                     	;# 
   133     0006                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     008C                     	;# 
   155     008E                     	;# 
   156     0092                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009A                     	;# 
   160     009B                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009F                     	;# 
   164     0000                     	;# 
   165     0001                     	;# 
   166     0002                     	;# 
   167     0003                     	;# 
   168     0004                     	;# 
   169     0005                     	;# 
   170     0006                     	;# 
   171     000A                     	;# 
   172     000B                     	;# 
   173     000C                     	;# 
   174     000E                     	;# 
   175     000E                     	;# 
   176     000F                     	;# 
   177     0010                     	;# 
   178     0011                     	;# 
   179     0012                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     008C                     	;# 
   192     008E                     	;# 
   193     0092                     	;# 
   194     0098                     	;# 
   195     0099                     	;# 
   196     009A                     	;# 
   197     009B                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009F                     	;# 
   201     0005                     _PORTA	set	5
   202     002F                     _RA7	set	47
   203     002E                     _RA6	set	46
   204     0037                     _RB7	set	55
   205     0036                     _RB6	set	54
   206     0035                     _RB5	set	53
   207     0034                     _RB4	set	52
   208     0033                     _RB3	set	51
   209     0032                     _RB2	set	50
   210     0031                     _RB1	set	49
   211     0030                     _RB0	set	48
   212     0085                     _TRISA	set	133
   213     0081                     _OPTION_REGbits	set	129
   214     0086                     _TRISB	set	134
   215     042E                     _TRISA6	set	1070
   216     042F                     _TRISA7	set	1071
   217                           
   218                           	psect	cinit
   219     07FE                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FE                     __initialization:
   223     07FE                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FE                     __end_of__initialization:
   227     07FE  0183               	clrf	3
   228     07FF  2EAE               	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_InitKeypad:
   233     0070                     ??_InitKeypad:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_InitLCD:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_GetKey:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_ClearLCDScreen:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_init_display_controller:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_clcd_write:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_init_config:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_main:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_scan_keypad:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ??_scan_keypad:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     clcd_write@mode:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268     0070                     	ds	1
   269     0071                     ??_clcd_write:
   270                           
   271                           ; 1 bytes @ 0x1
   272     0071                     	ds	2
   273     0073                     ??_GetKey:
   274     0073                     GetKey@key:	
   275                           ; 1 bytes @ 0x3
   276                           
   277     0073                     clcd_write@byte:	
   278                           ; 1 bytes @ 0x3
   279                           
   280                           
   281                           ; 1 bytes @ 0x3
   282     0073                     	ds	1
   283     0074                     ??_ClearLCDScreen:
   284     0074                     ?_clcd_putch:	
   285                           ; 1 bytes @ 0x4
   286                           
   287     0074                     ??_init_display_controller:	
   288                           ; 1 bytes @ 0x4
   289                           
   290     0074                     clcd_putch@addr:	
   291                           ; 1 bytes @ 0x4
   292                           
   293                           
   294                           ; 1 bytes @ 0x4
   295     0074                     	ds	1
   296     0075                     ??_clcd_putch:
   297     0075                     clcd_putch@data:	
   298                           ; 1 bytes @ 0x5
   299                           
   300                           
   301                           ; 1 bytes @ 0x5
   302     0075                     	ds	1
   303     0076                     ??_InitLCD:
   304     0076                     ??_init_config:	
   305                           ; 1 bytes @ 0x6
   306                           
   307     0076                     ??_main:	
   308                           ; 1 bytes @ 0x6
   309                           
   310     0076                     main@key:	
   311                           ; 1 bytes @ 0x6
   312                           
   313                           
   314                           ; 1 bytes @ 0x6
   315     0076                     	ds	1
   316                           
   317                           	psect	maintext
   318     06AE                     __pmaintext:	
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 26 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  key             1    6[COMMON] unsigned char 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : B00/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   338 ;;      Params:         0       0       0       0
   339 ;;      Locals:         1       0       0       0
   340 ;;      Temps:          0       0       0       0
   341 ;;      Totals:         1       0       0       0
   342 ;;Total ram usage:        1 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ClearLCDScreen
   346 ;;		_GetKey
   347 ;;		_clcd_putch
   348 ;;		_init_config
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354     06AE                     _main:	
   355                           ;psect for function _main
   356                           
   357     06AE                     l912:	
   358                           ;incstack = 0
   359                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   360                           
   361     06AE  2695               	fcall	_init_config
   362     06AF                     l914:
   363     06AF  2698               	fcall	_GetKey
   364     06B0  00F6               	movwf	main@key
   365     06B1                     l916:
   366     06B1  26C4               	fcall	_ClearLCDScreen
   367     06B2                     l918:
   368     06B2  3085               	movlw	133
   369     06B3  00F4               	movwf	clcd_putch@addr
   370     06B4  0876               	movf	main@key,w
   371     06B5  269C               	fcall	_clcd_putch
   372     06B6  2EAF               	goto	l914
   373     06B7  2800               	ljmp	start
   374     06B8                     __end_of_main:
   375                           
   376                           	psect	text1
   377     0695                     __ptext1:	
   378 ;; *************** function _init_config *****************
   379 ;; Defined at:
   380 ;;		line 19 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   394 ;;      Params:         0       0       0       0
   395 ;;      Locals:         0       0       0       0
   396 ;;      Temps:          0       0       0       0
   397 ;;      Totals:         0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 3
   401 ;; This function calls:
   402 ;;		_InitKeypad
   403 ;;		_InitLCD
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     0695                     _init_config:	
   410                           ;psect for function _init_config
   411                           
   412     0695                     l904:	
   413                           ;incstack = 0
   414                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   415                           
   416     0695  26B8               	fcall	_InitKeypad
   417     0696  26A5               	fcall	_InitLCD
   418     0697                     l13:
   419     0697  0008               	return
   420     0698                     __end_of_init_config:
   421                           
   422                           	psect	text2
   423     06A5                     __ptext2:	
   424 ;; *************** function _InitLCD *****************
   425 ;; Defined at:
   426 ;;		line 14 in file "LED.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         0       0       0       0
   442 ;;      Temps:          0       0       0       0
   443 ;;      Totals:         0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 2
   447 ;; This function calls:
   448 ;;		_init_display_controller
   449 ;; This function is called by:
   450 ;;		_init_config
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454     06A5                     _InitLCD:	
   455                           ;psect for function _InitLCD
   456                           
   457     06A5                     l898:	
   458                           ;incstack = 0
   459                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;LED.c: 17: 
   463     06A5  1683               	bsf	3,5	;RP0=1, select bank1
   464     06A6  1303               	bcf	3,6	;RP1=0, select bank1
   465     06A7  1385               	bcf	5,7	;volatile
   466                           
   467                           ;LED.c: 18:     clcd_write(0x33, 0);
   468     06A8  1305               	bcf	5,6	;volatile
   469     06A9                     l900:
   470                           
   471                           ;LED.c: 21:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   472     06A9  0805               	movf	5,w	;volatile
   473     06AA  38F0               	iorlw	240
   474     06AB  0085               	movwf	5	;volatile
   475     06AC                     l902:
   476                           
   477                           ;LED.c: 23:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   478     06AC  2707               	fcall	_init_display_controller
   479     06AD                     l104:
   480     06AD  0008               	return
   481     06AE                     __end_of_InitLCD:
   482                           
   483                           	psect	text3
   484     0707                     __ptext3:	
   485 ;; *************** function _init_display_controller *****************
   486 ;; Defined at:
   487 ;;		line 26 in file "LED.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0, pclath, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   501 ;;      Params:         0       0       0       0
   502 ;;      Locals:         0       0       0       0
   503 ;;      Temps:          2       0       0       0
   504 ;;      Totals:         2       0       0       0
   505 ;;Total ram usage:        2 bytes
   506 ;; Hardware stack levels used: 1
   507 ;; Hardware stack levels required when called: 1
   508 ;; This function calls:
   509 ;;		_clcd_write
   510 ;; This function is called by:
   511 ;;		_InitLCD
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     0707                     _init_display_controller:	
   516                           ;psect for function _init_display_controller
   517                           
   518     0707                     l874:	
   519                           ;incstack = 0
   520                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   521                           
   522                           
   523                           ;LED.c: 29:     clcd_write(0x01, 0);
   524     0707  30C3               	movlw	195
   525     0708  00F5               	movwf	??_init_display_controller+1
   526     0709  30CD               	movlw	205
   527     070A  00F4               	movwf	??_init_display_controller
   528     070B                     u237:
   529     070B  0BF4               	decfsz	??_init_display_controller,f
   530     070C  2F0B               	goto	u237
   531     070D  0BF5               	decfsz	??_init_display_controller+1,f
   532     070E  2F0B               	goto	u237
   533     070F                     l876:
   534                           
   535                           ;LED.c: 32:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   536     070F  01F0               	clrf	clcd_write@mode
   537     0710  3033               	movlw	51
   538     0711  26D1               	fcall	_clcd_write
   539     0712                     l878:
   540                           
   541                           ;LED.c: 33: }
   542     0712  301B               	movlw	27
   543     0713  00F5               	movwf	??_init_display_controller+1
   544     0714  309E               	movlw	158
   545     0715  00F4               	movwf	??_init_display_controller
   546     0716                     u247:
   547     0716  0BF4               	decfsz	??_init_display_controller,f
   548     0717  2F16               	goto	u247
   549     0718  0BF5               	decfsz	??_init_display_controller+1,f
   550     0719  2F16               	goto	u247
   551     071A  0000               	nop
   552                           
   553                           ;LED.c: 34: 
   554     071B  01F0               	clrf	clcd_write@mode
   555     071C  3033               	movlw	51
   556     071D  26D1               	fcall	_clcd_write
   557     071E                     l880:
   558                           
   559                           ;LED.c: 35: void clcd_putch(const unsigned char data, unsigned char addr)
   560     071E  30A6               	movlw	166
   561     071F  00F4               	movwf	??_init_display_controller
   562     0720                     u257:
   563     0720  0BF4               	decfsz	??_init_display_controller,f
   564     0721  2F20               	goto	u257
   565     0722  0000               	nop
   566     0723                     l882:
   567                           
   568                           ;LED.c: 36: {
   569     0723  01F0               	clrf	clcd_write@mode
   570     0724  3033               	movlw	51
   571     0725  26D1               	fcall	_clcd_write
   572     0726                     l884:
   573                           
   574                           ;LED.c: 37:     clcd_write(addr, 0);
   575     0726  2F27               	nop2	;2 cycle nop
   576     0727  2F28               	nop2	;2 cycle nop
   577     0728  0000               	nop
   578     0729                     l886:
   579                           
   580                           ;LED.c: 39: }
   581     0729  01F0               	clrf	clcd_write@mode
   582     072A  3002               	movlw	2
   583     072B  26D1               	fcall	_clcd_write
   584     072C                     l888:
   585                           
   586                           ;LED.c: 40: 
   587     072C  30A6               	movlw	166
   588     072D  00F4               	movwf	??_init_display_controller
   589     072E                     u267:
   590     072E  0BF4               	decfsz	??_init_display_controller,f
   591     072F  2F2E               	goto	u267
   592     0730  0000               	nop
   593                           
   594                           ;LED.c: 41: 
   595     0731  01F0               	clrf	clcd_write@mode
   596     0732  3028               	movlw	40
   597     0733  26D1               	fcall	_clcd_write
   598     0734                     l890:
   599                           
   600                           ;LED.c: 42: void clcd_write(unsigned char byte, unsigned char mode)
   601     0734  30A6               	movlw	166
   602     0735  00F4               	movwf	??_init_display_controller
   603     0736                     u277:
   604     0736  0BF4               	decfsz	??_init_display_controller,f
   605     0737  2F36               	goto	u277
   606     0738  0000               	nop
   607     0739                     l892:
   608                           
   609                           ;LED.c: 43: {
   610     0739  01F0               	clrf	clcd_write@mode
   611     073A  3001               	movlw	1
   612     073B  26D1               	fcall	_clcd_write
   613                           
   614                           ;LED.c: 44:     RA6 = (__bit)mode;
   615     073C  3004               	movlw	4
   616     073D  00F5               	movwf	??_init_display_controller+1
   617     073E  303D               	movlw	61
   618     073F  00F4               	movwf	??_init_display_controller
   619     0740                     u287:
   620     0740  0BF4               	decfsz	??_init_display_controller,f
   621     0741  2F40               	goto	u287
   622     0742  0BF5               	decfsz	??_init_display_controller+1,f
   623     0743  2F40               	goto	u287
   624     0744  2F45               	nop2
   625     0745                     l894:
   626                           
   627                           ;LED.c: 45: 
   628     0745  01F0               	clrf	clcd_write@mode
   629     0746  300C               	movlw	12
   630     0747  26D1               	fcall	_clcd_write
   631     0748                     l896:
   632                           
   633                           ;LED.c: 46:     PORTA = byte & 0xF0;
   634     0748  30A6               	movlw	166
   635     0749  00F4               	movwf	??_init_display_controller
   636     074A                     u297:
   637     074A  0BF4               	decfsz	??_init_display_controller,f
   638     074B  2F4A               	goto	u297
   639     074C  0000               	nop
   640     074D                     l107:
   641     074D  0008               	return
   642     074E                     __end_of_init_display_controller:
   643                           
   644                           	psect	text4
   645     06B8                     __ptext4:	
   646 ;; *************** function _InitKeypad *****************
   647 ;; Defined at:
   648 ;;		line 14 in file "keypad.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   662 ;;      Params:         0       0       0       0
   663 ;;      Locals:         0       0       0       0
   664 ;;      Temps:          0       0       0       0
   665 ;;      Totals:         0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_init_config
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675     06B8                     _InitKeypad:	
   676                           ;psect for function _InitKeypad
   677                           
   678     06B8                     l704:	
   679                           ;incstack = 0
   680                           ; Regs used in _InitKeypad: [wreg]
   681                           
   682                           
   683                           ;keypad.c: 18:     RB1=1;
   684     06B8  30F0               	movlw	240
   685     06B9  1683               	bsf	3,5	;RP0=1, select bank1
   686     06BA  1303               	bcf	3,6	;RP1=0, select bank1
   687     06BB  0086               	movwf	6	;volatile
   688     06BC                     l706:
   689                           
   690                           ;keypad.c: 20:     RB3=1;
   691     06BC  1381               	bcf	1,7	;volatile
   692     06BD                     l708:
   693                           
   694                           ;keypad.c: 22:     _delay((unsigned long)((250)*(20000000/4000.0)));
   695     06BD  1283               	bcf	3,5	;RP0=0, select bank0
   696     06BE  1303               	bcf	3,6	;RP1=0, select bank0
   697     06BF  1406               	bsf	6,0	;volatile
   698     06C0                     l710:
   699                           
   700                           ;keypad.c: 23: 
   701     06C0  1486               	bsf	6,1	;volatile
   702     06C1                     l712:
   703                           
   704                           ;keypad.c: 24:     if(RB4==0){
   705     06C1  1506               	bsf	6,2	;volatile
   706     06C2                     l714:
   707                           
   708                           ;keypad.c: 25:         return 7;
   709     06C2  1586               	bsf	6,3	;volatile
   710     06C3                     l46:
   711     06C3  0008               	return
   712     06C4                     __end_of_InitKeypad:
   713                           
   714                           	psect	text5
   715     069C                     __ptext5:	
   716 ;; *************** function _clcd_putch *****************
   717 ;; Defined at:
   718 ;;		line 49 in file "LED.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  data            1    wreg     const unsigned char 
   721 ;;  addr            1    4[COMMON] unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  data            1    5[COMMON] const unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   733 ;;      Params:         1       0       0       0
   734 ;;      Locals:         1       0       0       0
   735 ;;      Temps:          0       0       0       0
   736 ;;      Totals:         2       0       0       0
   737 ;;Total ram usage:        2 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 1
   740 ;; This function calls:
   741 ;;		_clcd_write
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747     069C                     _clcd_putch:	
   748                           ;psect for function _clcd_putch
   749                           
   750                           
   751                           ;incstack = 0
   752                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   753                           ;clcd_putch@data stored from wreg
   754     069C  00F5               	movwf	clcd_putch@data
   755     069D                     l910:
   756                           
   757                           ;LED.c: 49:     RA7 = 0;;LED.c: 50: ;LED.c: 51:     PORTA = (unsigned char)((byte & 0x0F
      +                          ) << 4);
   758     069D  01F0               	clrf	clcd_write@mode
   759     069E  0874               	movf	clcd_putch@addr,w
   760     069F  26D1               	fcall	_clcd_write
   761                           
   762                           ;LED.c: 52:     RA7 = 1;
   763     06A0  01F0               	clrf	clcd_write@mode
   764     06A1  0AF0               	incf	clcd_write@mode,f
   765     06A2  0875               	movf	clcd_putch@data,w
   766     06A3  26D1               	fcall	_clcd_write
   767     06A4                     l110:
   768     06A4  0008               	return
   769     06A5                     __end_of_clcd_putch:
   770                           
   771                           	psect	text6
   772     0698                     __ptext6:	
   773 ;; *************** function _GetKey *****************
   774 ;; Defined at:
   775 ;;		line 122 in file "keypad.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  key             1    3[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   789 ;;      Params:         0       0       0       0
   790 ;;      Locals:         1       0       0       0
   791 ;;      Temps:          0       0       0       0
   792 ;;      Totals:         1       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 1
   796 ;; This function calls:
   797 ;;		_scan_keypad
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803     0698                     _GetKey:	
   804                           ;psect for function _GetKey
   805                           
   806     0698                     l80:	
   807                           ;incstack = 0
   808                           ; Regs used in _GetKey: [wreg+pclath+cstack]
   809                           
   810     0698                     l834:
   811     0698  274E               	fcall	_scan_keypad
   812     0699  00F3               	movwf	GetKey@key
   813     069A                     l836:
   814     069A  0873               	movf	GetKey@key,w
   815     069B                     l81:
   816     069B  0008               	return
   817     069C                     __end_of_GetKey:
   818                           
   819                           	psect	text7
   820     074E                     __ptext7:	
   821 ;; *************** function _scan_keypad *****************
   822 ;; Defined at:
   823 ;;		line 29 in file "keypad.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      unsigned char 
   830 ;; Registers used:
   831 ;;		wreg
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   837 ;;      Params:         0       0       0       0
   838 ;;      Locals:         0       0       0       0
   839 ;;      Temps:          3       0       0       0
   840 ;;      Totals:         3       0       0       0
   841 ;;Total ram usage:        3 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_GetKey
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850     074E                     _scan_keypad:	
   851                           ;psect for function _scan_keypad
   852                           
   853     074E                     l722:	
   854                           ;incstack = 0
   855                           ; Regs used in _scan_keypad: [wreg]
   856                           
   857                           
   858                           ;keypad.c: 31: 
   859     074E  1283               	bcf	3,5	;RP0=0, select bank0
   860     074F  1303               	bcf	3,6	;RP1=0, select bank0
   861     0750  1006               	bcf	6,0	;volatile
   862                           
   863                           ;keypad.c: 32:     else if(RB6==0){
   864     0751  1486               	bsf	6,1	;volatile
   865                           
   866                           ;keypad.c: 33:         return 9;
   867     0752  1506               	bsf	6,2	;volatile
   868                           
   869                           ;keypad.c: 34:     }
   870     0753  1586               	bsf	6,3	;volatile
   871     0754                     l724:
   872                           
   873                           ;keypad.c: 36:         return '/';
   874     0754  3007               	movlw	7
   875     0755  00F2               	movwf	??_scan_keypad+2
   876     0756  3058               	movlw	88
   877     0757  00F1               	movwf	??_scan_keypad+1
   878     0758  3059               	movlw	89
   879     0759  00F0               	movwf	??_scan_keypad
   880     075A                     u307:
   881     075A  0BF0               	decfsz	??_scan_keypad,f
   882     075B  2F5A               	goto	u307
   883     075C  0BF1               	decfsz	??_scan_keypad+1,f
   884     075D  2F5A               	goto	u307
   885     075E  0BF2               	decfsz	??_scan_keypad+2,f
   886     075F  2F5A               	goto	u307
   887     0760  2F61               	nop2
   888     0761                     l726:
   889                           
   890                           ;keypad.c: 38:     RB0=1;
   891     0761  1283               	bcf	3,5	;RP0=0, select bank0
   892     0762  1303               	bcf	3,6	;RP1=0, select bank0
   893     0763  1A06               	btfsc	6,4	;volatile
   894     0764  2F66               	goto	u41
   895     0765  2F67               	goto	u40
   896     0766                     u41:
   897     0766  2F69               	goto	l49
   898     0767                     u40:
   899     0767                     l728:
   900                           
   901                           ;keypad.c: 39:     RB1=0;
   902     0767  3007               	movlw	7
   903     0768  2FFD               	goto	l50
   904     0769                     l49:	
   905                           ;keypad.c: 42: 
   906                           
   907     0769  1A86               	btfsc	6,5	;volatile
   908     076A  2F6C               	goto	u51
   909     076B  2F6D               	goto	u50
   910     076C                     u51:
   911     076C  2F6F               	goto	l52
   912     076D                     u50:
   913     076D                     l734:
   914                           
   915                           ;keypad.c: 43:      _delay((unsigned long)((250)*(20000000/4000.0)));
   916     076D  3008               	movlw	8
   917     076E  2FFD               	goto	l50
   918     076F                     l52:	
   919                           ;keypad.c: 46:         return 4;
   920                           
   921     076F  1B06               	btfsc	6,6	;volatile
   922     0770  2F72               	goto	u61
   923     0771  2F73               	goto	u60
   924     0772                     u61:
   925     0772  2F75               	goto	l54
   926     0773                     u60:
   927     0773                     l740:
   928                           
   929                           ;keypad.c: 47:     }
   930     0773  3009               	movlw	9
   931     0774  2FFD               	goto	l50
   932     0775                     l54:	
   933                           ;keypad.c: 49:     else if(RB5==0){
   934                           
   935     0775  1B86               	btfsc	6,7	;volatile
   936     0776  2F78               	goto	u71
   937     0777  2F79               	goto	u70
   938     0778                     u71:
   939     0778  2F7B               	goto	l51
   940     0779                     u70:
   941     0779                     l746:
   942                           
   943                           ;keypad.c: 50:         return 5;
   944     0779  302F               	movlw	47
   945     077A  2FFD               	goto	l50
   946     077B                     l51:
   947                           
   948                           ;keypad.c: 52: 
   949     077B  1406               	bsf	6,0	;volatile
   950                           
   951                           ;keypad.c: 53:     else if(RB6==0){
   952     077C  1086               	bcf	6,1	;volatile
   953                           
   954                           ;keypad.c: 54:         return 6;
   955     077D  1506               	bsf	6,2	;volatile
   956                           
   957                           ;keypad.c: 55:     }
   958     077E  1586               	bsf	6,3	;volatile
   959     077F                     l750:
   960                           
   961                           ;keypad.c: 57:         return 'X';
   962     077F  3007               	movlw	7
   963     0780  00F2               	movwf	??_scan_keypad+2
   964     0781  3058               	movlw	88
   965     0782  00F1               	movwf	??_scan_keypad+1
   966     0783  3059               	movlw	89
   967     0784  00F0               	movwf	??_scan_keypad
   968     0785                     u317:
   969     0785  0BF0               	decfsz	??_scan_keypad,f
   970     0786  2F85               	goto	u317
   971     0787  0BF1               	decfsz	??_scan_keypad+1,f
   972     0788  2F85               	goto	u317
   973     0789  0BF2               	decfsz	??_scan_keypad+2,f
   974     078A  2F85               	goto	u317
   975     078B  2F8C               	nop2
   976     078C                     l752:
   977                           
   978                           ;keypad.c: 59: 
   979     078C  1283               	bcf	3,5	;RP0=0, select bank0
   980     078D  1303               	bcf	3,6	;RP1=0, select bank0
   981     078E  1A06               	btfsc	6,4	;volatile
   982     078F  2F91               	goto	u81
   983     0790  2F92               	goto	u80
   984     0791                     u81:
   985     0791  2F94               	goto	l57
   986     0792                     u80:
   987     0792                     l754:
   988                           
   989                           ;keypad.c: 60:     RB0=1;
   990     0792  3004               	movlw	4
   991     0793  2FFD               	goto	l50
   992     0794                     l57:	
   993                           ;keypad.c: 63:     RB3=1;
   994                           
   995     0794  1A86               	btfsc	6,5	;volatile
   996     0795  2F97               	goto	u91
   997     0796  2F98               	goto	u90
   998     0797                     u91:
   999     0797  2F9A               	goto	l59
  1000     0798                     u90:
  1001     0798                     l760:
  1002                           
  1003                           ;keypad.c: 64: 
  1004     0798  3005               	movlw	5
  1005     0799  2FFD               	goto	l50
  1006     079A                     l59:	
  1007                           ;keypad.c: 67:     if(RB4==0){
  1008                           
  1009     079A  1B06               	btfsc	6,6	;volatile
  1010     079B  2F9D               	goto	u101
  1011     079C  2F9E               	goto	u100
  1012     079D                     u101:
  1013     079D  2FA0               	goto	l61
  1014     079E                     u100:
  1015     079E                     l766:
  1016                           
  1017                           ;keypad.c: 68:         return 1;
  1018     079E  3006               	movlw	6
  1019     079F  2FFD               	goto	l50
  1020     07A0                     l61:	
  1021                           ;keypad.c: 70: 
  1022                           
  1023     07A0  1B86               	btfsc	6,7	;volatile
  1024     07A1  2FA3               	goto	u111
  1025     07A2  2FA4               	goto	u110
  1026     07A3                     u111:
  1027     07A3  2FA6               	goto	l58
  1028     07A4                     u110:
  1029     07A4                     l772:
  1030                           
  1031                           ;keypad.c: 71:     else if(RB5==0){
  1032     07A4  3058               	movlw	88
  1033     07A5  2FFD               	goto	l50
  1034     07A6                     l58:
  1035                           
  1036                           ;keypad.c: 74: 
  1037     07A6  1406               	bsf	6,0	;volatile
  1038                           
  1039                           ;keypad.c: 75:     else if(RB6==0){
  1040     07A7  1486               	bsf	6,1	;volatile
  1041                           
  1042                           ;keypad.c: 76:         return 3;
  1043     07A8  1106               	bcf	6,2	;volatile
  1044                           
  1045                           ;keypad.c: 77:     }
  1046     07A9  1586               	bsf	6,3	;volatile
  1047     07AA                     l776:
  1048                           
  1049                           ;keypad.c: 79:         return '-';
  1050     07AA  3007               	movlw	7
  1051     07AB  00F2               	movwf	??_scan_keypad+2
  1052     07AC  3058               	movlw	88
  1053     07AD  00F1               	movwf	??_scan_keypad+1
  1054     07AE  3059               	movlw	89
  1055     07AF  00F0               	movwf	??_scan_keypad
  1056     07B0                     u327:
  1057     07B0  0BF0               	decfsz	??_scan_keypad,f
  1058     07B1  2FB0               	goto	u327
  1059     07B2  0BF1               	decfsz	??_scan_keypad+1,f
  1060     07B3  2FB0               	goto	u327
  1061     07B4  0BF2               	decfsz	??_scan_keypad+2,f
  1062     07B5  2FB0               	goto	u327
  1063     07B6  2FB7               	nop2
  1064     07B7                     l778:
  1065                           
  1066                           ;keypad.c: 81: 
  1067     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1068     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1069     07B9  1A06               	btfsc	6,4	;volatile
  1070     07BA  2FBC               	goto	u121
  1071     07BB  2FBD               	goto	u120
  1072     07BC                     u121:
  1073     07BC  2FBF               	goto	l64
  1074     07BD                     u120:
  1075     07BD                     l780:
  1076                           
  1077                           ;keypad.c: 82:     RB0=1;
  1078     07BD  3001               	movlw	1
  1079     07BE  2FFD               	goto	l50
  1080     07BF                     l64:	
  1081                           ;keypad.c: 85:     RB3=0;
  1082                           
  1083     07BF  1A86               	btfsc	6,5	;volatile
  1084     07C0  2FC2               	goto	u131
  1085     07C1  2FC3               	goto	u130
  1086     07C2                     u131:
  1087     07C2  2FC5               	goto	l66
  1088     07C3                     u130:
  1089     07C3                     l786:
  1090                           
  1091                           ;keypad.c: 86: 
  1092     07C3  3002               	movlw	2
  1093     07C4  2FFD               	goto	l50
  1094     07C5                     l66:	
  1095                           ;keypad.c: 89:     if(RB4==0){
  1096                           
  1097     07C5  1B06               	btfsc	6,6	;volatile
  1098     07C6  2FC8               	goto	u141
  1099     07C7  2FC9               	goto	u140
  1100     07C8                     u141:
  1101     07C8  2FCB               	goto	l68
  1102     07C9                     u140:
  1103     07C9                     l792:
  1104                           
  1105                           ;keypad.c: 90:         return 'C';
  1106     07C9  3003               	movlw	3
  1107     07CA  2FFD               	goto	l50
  1108     07CB                     l68:	
  1109                           ;keypad.c: 92: 
  1110                           
  1111     07CB  1B86               	btfsc	6,7	;volatile
  1112     07CC  2FCE               	goto	u151
  1113     07CD  2FCF               	goto	u150
  1114     07CE                     u151:
  1115     07CE  2FD1               	goto	l65
  1116     07CF                     u150:
  1117     07CF                     l798:
  1118                           
  1119                           ;keypad.c: 93:     else if(RB5==0){
  1120     07CF  302D               	movlw	45
  1121     07D0  2FFD               	goto	l50
  1122     07D1                     l65:
  1123                           
  1124                           ;keypad.c: 96: 
  1125     07D1  1406               	bsf	6,0	;volatile
  1126                           
  1127                           ;keypad.c: 97:     else if(RB6==0){
  1128     07D2  1486               	bsf	6,1	;volatile
  1129                           
  1130                           ;keypad.c: 98:         return '=';
  1131     07D3  1506               	bsf	6,2	;volatile
  1132                           
  1133                           ;keypad.c: 99:     }
  1134     07D4  1186               	bcf	6,3	;volatile
  1135     07D5                     l802:
  1136                           
  1137                           ;keypad.c: 101:         return '+';
  1138     07D5  3007               	movlw	7
  1139     07D6  00F2               	movwf	??_scan_keypad+2
  1140     07D7  3058               	movlw	88
  1141     07D8  00F1               	movwf	??_scan_keypad+1
  1142     07D9  3059               	movlw	89
  1143     07DA  00F0               	movwf	??_scan_keypad
  1144     07DB                     u337:
  1145     07DB  0BF0               	decfsz	??_scan_keypad,f
  1146     07DC  2FDB               	goto	u337
  1147     07DD  0BF1               	decfsz	??_scan_keypad+1,f
  1148     07DE  2FDB               	goto	u337
  1149     07DF  0BF2               	decfsz	??_scan_keypad+2,f
  1150     07E0  2FDB               	goto	u337
  1151     07E1  2FE2               	nop2
  1152     07E2                     l804:
  1153                           
  1154                           ;keypad.c: 103:     return 0xFF;
  1155     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1156     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1157     07E4  1A06               	btfsc	6,4	;volatile
  1158     07E5  2FE7               	goto	u161
  1159     07E6  2FE8               	goto	u160
  1160     07E7                     u161:
  1161     07E7  2FEA               	goto	l71
  1162     07E8                     u160:
  1163     07E8                     l806:
  1164                           
  1165                           ;keypad.c: 104: 
  1166     07E8  3043               	movlw	67
  1167     07E9  2FFD               	goto	l50
  1168     07EA                     l71:	
  1169                           ;keypad.c: 107: 
  1170                           
  1171     07EA  1A86               	btfsc	6,5	;volatile
  1172     07EB  2FED               	goto	u171
  1173     07EC  2FEE               	goto	u170
  1174     07ED                     u171:
  1175     07ED  2FF0               	goto	l73
  1176     07EE                     u170:
  1177     07EE                     l812:
  1178                           
  1179                           ;keypad.c: 108: unsigned char GetKey(void)
  1180     07EE  3030               	movlw	48
  1181     07EF  2FFD               	goto	l50
  1182     07F0                     l73:	
  1183                           ;keypad.c: 111:     while(1){
  1184                           
  1185     07F0  1B06               	btfsc	6,6	;volatile
  1186     07F1  2FF3               	goto	u181
  1187     07F2  2FF4               	goto	u180
  1188     07F3                     u181:
  1189     07F3  2FF6               	goto	l75
  1190     07F4                     u180:
  1191     07F4                     l818:
  1192                           
  1193                           ;keypad.c: 112:         key=scan_keypad();
  1194     07F4  303D               	movlw	61
  1195     07F5  2FFD               	goto	l50
  1196     07F6                     l75:	
  1197                           ;keypad.c: 114:     }
  1198                           
  1199     07F6  1B86               	btfsc	6,7	;volatile
  1200     07F7  2FF9               	goto	u191
  1201     07F8  2FFA               	goto	u190
  1202     07F9                     u191:
  1203     07F9  2FFC               	goto	l74
  1204     07FA                     u190:
  1205     07FA                     l824:
  1206                           
  1207                           ;keypad.c: 115: }
  1208     07FA  302B               	movlw	43
  1209     07FB  2FFD               	goto	l50
  1210     07FC                     l74:
  1211     07FC                     l828:
  1212     07FC  30FF               	movlw	255
  1213     07FD                     l50:
  1214     07FD  0008               	return
  1215     07FE                     __end_of_scan_keypad:
  1216                           
  1217                           	psect	text8
  1218     06C4                     __ptext8:	
  1219 ;; *************** function _ClearLCDScreen *****************
  1220 ;; Defined at:
  1221 ;;		line 72 in file "LED.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1235 ;;      Params:         0       0       0       0
  1236 ;;      Locals:         0       0       0       0
  1237 ;;      Temps:          2       0       0       0
  1238 ;;      Totals:         2       0       0       0
  1239 ;;Total ram usage:        2 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 1
  1242 ;; This function calls:
  1243 ;;		_clcd_write
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     06C4                     _ClearLCDScreen:	
  1250                           ;psect for function _ClearLCDScreen
  1251                           
  1252     06C4                     l906:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _ClearLCDScreen: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256     06C4  01F0               	clrf	clcd_write@mode
  1257     06C5  3001               	movlw	1
  1258     06C6  26D1               	fcall	_clcd_write
  1259     06C7                     l908:
  1260     06C7  3004               	movlw	4
  1261     06C8  00F5               	movwf	??_ClearLCDScreen+1
  1262     06C9  303D               	movlw	61
  1263     06CA  00F4               	movwf	??_ClearLCDScreen
  1264     06CB                     u347:
  1265     06CB  0BF4               	decfsz	??_ClearLCDScreen,f
  1266     06CC  2ECB               	goto	u347
  1267     06CD  0BF5               	decfsz	??_ClearLCDScreen+1,f
  1268     06CE  2ECB               	goto	u347
  1269     06CF  2ED0               	nop2
  1270     06D0                     l116:
  1271     06D0  0008               	return
  1272     06D1                     __end_of_ClearLCDScreen:
  1273                           
  1274                           	psect	text9
  1275     06D1                     __ptext9:	
  1276 ;; *************** function _clcd_write *****************
  1277 ;; Defined at:
  1278 ;;		line 56 in file "LED.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  byte            1    wreg     unsigned char 
  1281 ;;  mode            1    0[COMMON] unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  byte            1    3[COMMON] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1293 ;;      Params:         1       0       0       0
  1294 ;;      Locals:         1       0       0       0
  1295 ;;      Temps:          2       0       0       0
  1296 ;;      Totals:         4       0       0       0
  1297 ;;Total ram usage:        4 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_init_display_controller
  1303 ;;		_clcd_putch
  1304 ;;		_ClearLCDScreen
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308     06D1                     _clcd_write:	
  1309                           ;psect for function _clcd_write
  1310                           
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1314                           ;clcd_write@byte stored from wreg
  1315     06D1  00F3               	movwf	clcd_write@byte
  1316     06D2                     l854:
  1317                           
  1318                           ;LED.c: 56:     _delay((unsigned long)((4100)*(20000000/4000000.0)));;LED.c: 57: };LED.c
      +                          : 58: void ClearLCDScreen(void)
  1319     06D2  1870               	btfsc	clcd_write@mode,0
  1320     06D3  2ED5               	goto	u201
  1321     06D4  2ED9               	goto	u200
  1322     06D5                     u201:
  1323     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1324     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1325     06D7  1705               	bsf	5,6	;volatile
  1326     06D8  2EDC               	goto	u214
  1327     06D9                     u200:
  1328     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1329     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1330     06DB  1305               	bcf	5,6	;volatile
  1331     06DC                     u214:
  1332     06DC                     l856:
  1333                           
  1334                           ;LED.c: 60:     clcd_write(0x01, 0);
  1335     06DC  0873               	movf	clcd_write@byte,w
  1336     06DD  39F0               	andlw	240
  1337     06DE  0085               	movwf	5	;volatile
  1338     06DF                     l858:
  1339                           
  1340                           ;LED.c: 61:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1341     06DF  1785               	bsf	5,7	;volatile
  1342     06E0                     l860:
  1343                           
  1344                           ;LED.c: 62: }
  1345     06E0  30A6               	movlw	166
  1346     06E1  00F1               	movwf	??_clcd_write
  1347     06E2                     u357:
  1348     06E2  0BF1               	decfsz	??_clcd_write,f
  1349     06E3  2EE2               	goto	u357
  1350     06E4  0000               	nop
  1351     06E5                     l862:
  1352     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1353     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1354     06E7  1385               	bcf	5,7	;volatile
  1355     06E8                     l864:
  1356     06E8  0873               	movf	clcd_write@byte,w
  1357     06E9  390F               	andlw	15
  1358     06EA  00F1               	movwf	??_clcd_write
  1359     06EB  3003               	movlw	3
  1360     06EC                     u225:
  1361     06EC  1003               	clrc
  1362     06ED  0DF1               	rlf	??_clcd_write,f
  1363     06EE  3EFF               	addlw	-1
  1364     06EF  1D03               	skipz
  1365     06F0  2EEC               	goto	u225
  1366     06F1  1003               	clrc
  1367     06F2  0D71               	rlf	??_clcd_write,w
  1368     06F3  0085               	movwf	5	;volatile
  1369     06F4                     l866:
  1370     06F4  1785               	bsf	5,7	;volatile
  1371     06F5                     l868:
  1372     06F5  30A6               	movlw	166
  1373     06F6  00F1               	movwf	??_clcd_write
  1374     06F7                     u367:
  1375     06F7  0BF1               	decfsz	??_clcd_write,f
  1376     06F8  2EF7               	goto	u367
  1377     06F9  0000               	nop
  1378     06FA                     l870:
  1379     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1380     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1381     06FC  1385               	bcf	5,7	;volatile
  1382     06FD                     l872:
  1383     06FD  301B               	movlw	27
  1384     06FE  00F2               	movwf	??_clcd_write+1
  1385     06FF  309E               	movlw	158
  1386     0700  00F1               	movwf	??_clcd_write
  1387     0701                     u377:
  1388     0701  0BF1               	decfsz	??_clcd_write,f
  1389     0702  2F01               	goto	u377
  1390     0703  0BF2               	decfsz	??_clcd_write+1,f
  1391     0704  2F01               	goto	u377
  1392     0705  0000               	nop
  1393     0706                     l113:
  1394     0706  0008               	return
  1395     0707                     __end_of_clcd_write:
  1396     007E                     btemp	set	126	;btemp
  1397     007E                     wtemp0	set	126
  1398                           
  1399                           	psect	config
  1400                           
  1401                           ;Config register CONFIG @ 0x2007
  1402                           ;	Oscillator Selection bits
  1403                           ;	FOSC = 0x13, unprogrammed default
  1404                           ;	Watchdog Timer Enable bit
  1405                           ;	WDTE = OFF, WDT disabled
  1406                           ;	Power-up Timer Enable bit
  1407                           ;	PWRTE = 0x1, unprogrammed default
  1408                           ;	RA5/MCLR/VPP Pin Function Select bit
  1409                           ;	MCLRE = 0x1, unprogrammed default
  1410                           ;	Brown-out Detect Enable bit
  1411                           ;	BOREN = 0x1, unprogrammed default
  1412                           ;	Low-Voltage Programming Enable bit
  1413                           ;	LVP = 0x1, unprogrammed default
  1414                           ;	Data EE Memory Code Protection bit
  1415                           ;	CPD = 0x1, unprogrammed default
  1416                           ;	Flash Program Memory Code Protection bit
  1417                           ;	CP = 0x1, unprogrammed default
  1418     2007                     	org	8199
  1419     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ClearLCDScreen
    _main->_clcd_putch
    _InitLCD->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _GetKey->_scan_keypad
    _ClearLCDScreen->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2636
                                              6 COMMON     1     1      0
                     _ClearLCDScreen
                             _GetKey
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     826
                         _InitKeypad
                            _InitLCD
 ---------------------------------------------------------------------------------
 (2) _InitLCD                                              0     0      0     826
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     826
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     946
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               1     1      0      15
                                              3 COMMON     1     1      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ClearLCDScreen                                       2     2      0     826
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     826
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCDScreen
     _clcd_write
   _GetKey
     _scan_keypad
   _clcd_putch
     _clcd_write
   _init_config
     _InitKeypad
     _InitLCD
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Nov 21 20:50:30 2023

                             l13 0697                               l50 07FD                               l51 077B  
                             l52 076F                               l61 07A0                               l54 0775  
                             l46 06C3                               l71 07EA                               l64 07BF  
                             l80 0698                               l73 07F0                               l65 07D1  
                             l57 0794                               l49 0769                               l81 069B  
                             l74 07FC                               l66 07C5                               l58 07A6  
                             l75 07F6                               l59 079A                               l68 07CB  
                             u40 0767                               u41 0766                               u50 076D  
                             u51 076C                               u60 0773                               u61 0772  
                             u70 0779                               u71 0778                               u80 0792  
                             u81 0791                               u90 0798                               u91 0797  
                            l110 06A4                              l104 06AD                              l113 0706  
                            l107 074D                              l116 06D0                              l710 06C0  
                            l712 06C1                              l704 06B8                              l802 07D5  
                            l722 074E                              l714 06C2                              l706 06BC  
                            l812 07EE                              l804 07E2                              l740 0773  
                            l724 0754                              l708 06BD                              l900 06A9  
                            l806 07E8                              l750 077F                              l734 076D  
                            l726 0761                              l910 069D                              l902 06AC  
                            l824 07FA                              l760 0798                              l752 078C  
                            l728 0767                              l904 0695                              l912 06AE  
                            l906 06C4                              l818 07F4                              l754 0792  
                            l746 0779                              l834 0698                              l914 06AF  
                            l860 06E0                              l908 06C7                              l828 07FC  
                            l780 07BD                              l772 07A4                              l836 069A  
                            l916 06B1                              l870 06FA                              l862 06E5  
                            l854 06D2                              l766 079E                              l918 06B2  
                            l872 06FD                              l864 06E8                              l856 06DC  
                            l792 07C9                              l776 07AA                              l880 071E  
                            l866 06F4                              l858 06DF                              l786 07C3  
                            l778 07B7                              l890 0734                              l882 0723  
                            l874 0707                              l868 06F5                              l892 0739  
                            l884 0726                              l876 070F                              l798 07CF  
                            l894 0745                              l886 0729                              l878 0712  
                            l896 0748                              l888 072C                              l898 06A5  
                            _RB0 0030                              _RB1 0031                              _RB2 0032  
                            _RB3 0033                              _RB4 0034                              _RA6 002E  
                            _RB5 0035                              _RA7 002F                              _RB6 0036  
                            _RB7 0037                              u100 079E                              u101 079D  
                            u110 07A4                              u111 07A3                              u200 06D9  
                            u120 07BD                              u201 06D5                              u121 07BC  
                            u130 07C3                              u131 07C2                              u140 07C9  
                            u141 07C8                              u214 06DC                              u150 07CF  
                            u151 07CE                              u160 07E8                              u225 06EC  
                            u161 07E7                              u170 07EE                              u171 07ED  
                            u307 075A                              u180 07F4                              u181 07F3  
                            u317 0785                              u237 070B                              u190 07FA  
                            u191 07F9                              u327 07B0                              u247 0716  
                            u337 07DB                              u257 0720                              u347 06CB  
                            u267 072E                              u357 06E2                              u277 0736  
                            u367 06F7                              u287 0740                              u377 0701  
                            u297 074A                   clcd_putch@addr 0074                   clcd_putch@data 0075  
                           _main 06AE                             btemp 007E                             start 0000  
                 clcd_write@byte 0073                   clcd_write@mode 0070                  __end_of_InitLCD 06AE  
                          ?_main 0070                     ?_init_config 0070                            _PORTA 0005  
                          _TRISA 0085                            _TRISB 0086                            status 0003  
                          wtemp0 007E                     ?_scan_keypad 0070                       _InitKeypad 06B8  
                __initialization 07FE                     __end_of_main 06B8                           ??_main 0076  
               ??_ClearLCDScreen 0074                           _TRISA6 042E                           _TRISA7 042F  
                      ??_InitLCD 0076                           _GetKey 0698          _init_display_controller 0707  
        __end_of__initialization 07FE                      ?_InitKeypad 0070                   __pcstackCOMMON 0070  
                 _OPTION_REGbits 0081                          ?_GetKey 0070        ??_init_display_controller 0074  
                     _clcd_putch 069C                       _clcd_write 06D1                       __pmaintext 06AE  
                        _InitLCD 06A5                          __ptext1 0695                          __ptext2 06A5  
                        __ptext3 0707                          __ptext4 06B8                          __ptext5 069C  
                        __ptext6 0698                          __ptext7 074E                          __ptext8 06C4  
                        __ptext9 06D1  __end_of_init_display_controller 074E                          main@key 0076  
           end_of_initialization 07FE                      ?_clcd_putch 0074                        GetKey@key 0073  
                    ?_clcd_write 0070                     ??_InitKeypad 0070                   __end_of_GetKey 069C  
            start_initialization 07FE               __end_of_InitKeypad 06C4                         ??_GetKey 0073  
                  ??_init_config 0076                        ___latbits 0000                    ??_scan_keypad 0070  
                       ?_InitLCD 0070              __end_of_init_config 0698         ?_init_display_controller 0070  
                   ??_clcd_putch 0075                     ??_clcd_write 0071              __end_of_scan_keypad 07FE  
             __end_of_clcd_putch 06A5               __end_of_clcd_write 0707                   _ClearLCDScreen 06C4  
                    _init_config 0695           __end_of_ClearLCDScreen 06D1                      _scan_keypad 074E  
                ?_ClearLCDScreen 0070  
